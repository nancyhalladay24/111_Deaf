var express = require('express')
var router = express.Router()

module.exports = router

router.post('/fullDf', function(req, res) {
  res.redirect ('index')
});

router.post('/index', function(req,res){

})

router.post('/postcode', function(req, res) {
  if (req.body['postcode'] !== '') {
    req.session.postcode = req.body['postcode'];
    req.session.postcodesource = 'user';
    res.redirect('emergency-check');
  } else {
    res.render('/postcode.html', {
      error : true
    });
  }
});

router.post('/proxy', function(req, res) {
  if (req.body['proxy'] === 'true') {
    req.session.proxy = true;
    res.redirect('proxy-message');
  } else if (req.body['proxy'] === 'false') {
    req.session.proxy = false;
    res.redirect('sex');
  } else {
    res.render('proxy.html', {
      error : true
    });
  }
});

router.post('/sex', function(req, res) {
  if (req.body['sex']) {
  req.session.sex = req.body['sex'];
    res.redirect('date-of-birth');
  } else {
    res.render('deaf_speech/sex.html', {
      error : true
    });
  }
});

router.post('/date-of-birth', function(req, res) {
  if (!req.session.demographics) {
    req.session.demographics = {};
    req.session.demographics.dob = {};
  }
  var url = '/deaf_speech/start';
  if (req.body['dob-day'] !== '' && req.body['dob-month'] !== '' && req.body['dob-year'] !== '') {
    var year = req.body['dob-year']
    var month = req.body['dob-month']
    var day = req.body['dob-day']
    var dob = moment().set({
      'year': year,
      'month': month,
      'date': day,
    });
    var age = moment().diff(dob, 'years')
    var ageCategory = 'Adult';
    if (age < 16) {
      ageCategory = 'Child';
    }
    req.session.demographics.dob.year = year;
    req.session.demographics.dob.month = month;
    req.session.demographics.dob.day = day;
    req.session.demographics.dob.supplied = true;
    req.session.demographics.age = age;
    req.session.demographics.ageCategory = ageCategory;
    res.redirect(url);
  } else if (req.body['age'] !== '') {
    var age = Number(req.body['age']);
    var ageCategory = 'Adult';
    if (age < 16) {
      ageCategory = 'Child';
    }
    req.session.demographics.dob.supplied = false;
    req.session.demographics.age = age;
    req.session.demographics.ageCategory = ageCategory;
    res.redirect(url);
  } else {
    res.render('/date-of-birth.html', {
      error : true
    });
  }
});


router.post('/start', function(req, res){
  req.session.search = req.body['search']
  if (req.body['search'].startsWith("meds") === true) {
  res.redirect('EP-start');
  }
  if (req.body['search'].startsWith("cat2") === true) {
  res.redirect('999');
  }
  if (req.body['search'].startsWith("cat3") === true) {
  res.redirect('999-CAT3');
  }
  if (req.body['search'].startsWith("cat4") === true) {
  res.redirect('999-loweracuity');
  }
  if (req.body['search'].startsWith("999 no address") === true) {
  res.redirect('call-999-no-address');
  }
  if (req.body['search'].startsWith("999 validation") === true) {
  res.redirect('call-booking-startTR');
  }
  if (req.body['search'].startsWith("pharmacy CAS") === true) {
  res.redirect('pharmacyCAS/pharmacyCAS');
  }
  if (req.body['search'].startsWith("nurse call") === true) {
  res.redirect('callBack999/call-booking-startTR');
  }
  if (req.body['search'].startsWith("book call") === true) {
  res.redirect('covid-call-booking-start');
  }
});
